### RENAME this file to newVM.ps1 to make this 
### script recognizable by Powershell. 
### Apply necessary policy to allow local scripts:
### Get-ExecutionPolicy, 
### Set-ExecutionPolicy { remotesigned | unrestricted }

# Set VM Name, Switch Name, and Installation Media Path.

$VMName = 'autoPIG12'
$Switch = 'Default Switch'
$InstallMedia = 'F:\ISO\debi12uefi.iso'

# Create New Virtual Machine

Remove-VM $VMName -Force
rm "C:\Users\Public\Documents\Hyper-V\Virtual hard disks\$VMName.vhdx"

#  -Path "D:\VM\$VMName" `

New-VM `
  -Name $VMName `
  -MemoryStartupBytes 2GB `
  -Generation 2 `
  -NewVHDPath "C:\Users\Public\Documents\Hyper-V\Virtual hard disks\$VMName.vhdx" `
  -NewVHDSizeBytes 32GB `
  -SwitchName $Switch
  
Set-VMMemory `
  -VMName $VMName `
  -DynamicMemoryEnabled $False
  
Set-VM -Name $VMName -CheckpointType Disabled

Set-VMFirmware -VMName $VMName  -EnableSecureBoot off

# Add DVD Drive to Virtual Machine

Add-VMScsiController -VMName $VMName
Add-VMDvdDrive `
  -VMName $VMName `
  -ControllerNumber 1 `
  -ControllerLocation 0 `
  -Path $InstallMedia

# Mount Installation Media

$DVDDrive = Get-VMDvdDrive -VMName $VMName

# Configure Virtual Machine to Boot from DVD

Set-VMFirmware `
  -VMName $VMName `
  -FirstBootDevice $DVDDrive
